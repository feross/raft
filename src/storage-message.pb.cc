// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: storage-message.proto

#include "storage-message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace proto {
class StorageMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StorageMessage>
      _instance;
} _StorageMessage_default_instance_;
}  // namespace proto
namespace protobuf_storage_2dmessage_2eproto {
static void InitDefaultsStorageMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_StorageMessage_default_instance_;
    new (ptr) ::proto::StorageMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::StorageMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StorageMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStorageMessage}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_StorageMessage.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::StorageMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::StorageMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::StorageMessage, current_term_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::StorageMessage, voted_for_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::StorageMessage, last_applied_),
  0,
  1,
  2,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::proto::StorageMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_StorageMessage_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "storage-message.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\025storage-message.proto\022\005proto\"O\n\016Storag"
      "eMessage\022\024\n\014current_term\030\001 \002(\005\022\021\n\tvoted_"
      "for\030\002 \002(\005\022\024\n\014last_applied\030\003 \002(\005"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 111);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "storage-message.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_storage_2dmessage_2eproto
namespace proto {

// ===================================================================

void StorageMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StorageMessage::kCurrentTermFieldNumber;
const int StorageMessage::kVotedForFieldNumber;
const int StorageMessage::kLastAppliedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StorageMessage::StorageMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_storage_2dmessage_2eproto::scc_info_StorageMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.StorageMessage)
}
StorageMessage::StorageMessage(const StorageMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&current_term_, &from.current_term_,
    static_cast<size_t>(reinterpret_cast<char*>(&last_applied_) -
    reinterpret_cast<char*>(&current_term_)) + sizeof(last_applied_));
  // @@protoc_insertion_point(copy_constructor:proto.StorageMessage)
}

void StorageMessage::SharedCtor() {
  ::memset(&current_term_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_applied_) -
      reinterpret_cast<char*>(&current_term_)) + sizeof(last_applied_));
}

StorageMessage::~StorageMessage() {
  // @@protoc_insertion_point(destructor:proto.StorageMessage)
  SharedDtor();
}

void StorageMessage::SharedDtor() {
}

void StorageMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StorageMessage::descriptor() {
  ::protobuf_storage_2dmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2dmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StorageMessage& StorageMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_storage_2dmessage_2eproto::scc_info_StorageMessage.base);
  return *internal_default_instance();
}


void StorageMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.StorageMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&current_term_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&last_applied_) -
        reinterpret_cast<char*>(&current_term_)) + sizeof(last_applied_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StorageMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.StorageMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 current_term = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_current_term();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &current_term_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 voted_for = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_voted_for();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &voted_for_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 last_applied = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_last_applied();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_applied_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.StorageMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.StorageMessage)
  return false;
#undef DO_
}

void StorageMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.StorageMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 current_term = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->current_term(), output);
  }

  // required int32 voted_for = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->voted_for(), output);
  }

  // required int32 last_applied = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->last_applied(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.StorageMessage)
}

::google::protobuf::uint8* StorageMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.StorageMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 current_term = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->current_term(), target);
  }

  // required int32 voted_for = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->voted_for(), target);
  }

  // required int32 last_applied = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->last_applied(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.StorageMessage)
  return target;
}

size_t StorageMessage::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:proto.StorageMessage)
  size_t total_size = 0;

  if (has_current_term()) {
    // required int32 current_term = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->current_term());
  }

  if (has_voted_for()) {
    // required int32 voted_for = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->voted_for());
  }

  if (has_last_applied()) {
    // required int32 last_applied = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->last_applied());
  }

  return total_size;
}
size_t StorageMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.StorageMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 current_term = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->current_term());

    // required int32 voted_for = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->voted_for());

    // required int32 last_applied = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->last_applied());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StorageMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.StorageMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const StorageMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StorageMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.StorageMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.StorageMessage)
    MergeFrom(*source);
  }
}

void StorageMessage::MergeFrom(const StorageMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.StorageMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      current_term_ = from.current_term_;
    }
    if (cached_has_bits & 0x00000002u) {
      voted_for_ = from.voted_for_;
    }
    if (cached_has_bits & 0x00000004u) {
      last_applied_ = from.last_applied_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void StorageMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.StorageMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StorageMessage::CopyFrom(const StorageMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.StorageMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StorageMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void StorageMessage::Swap(StorageMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StorageMessage::InternalSwap(StorageMessage* other) {
  using std::swap;
  swap(current_term_, other->current_term_);
  swap(voted_for_, other->voted_for_);
  swap(last_applied_, other->last_applied_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StorageMessage::GetMetadata() const {
  protobuf_storage_2dmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2dmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::StorageMessage* Arena::CreateMaybeMessage< ::proto::StorageMessage >(Arena* arena) {
  return Arena::CreateInternal< ::proto::StorageMessage >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
